// <auto-generated />
using InteractiveStand.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InteractiveStand.Infrastructure.Migrations
{
    [DbContext(typeof(RegionDbContext))]
    [Migration("20250626082449_AddColumnsToPowerSource")]
    partial class AddColumnsToPowerSource
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InteractiveStand.Domain.Classes.ConnectedRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("ReceivedFirstCategoryCapacity")
                        .HasColumnType("double precision");

                    b.Property<double>("ReceivedRemainingCapacity")
                        .HasColumnType("double precision");

                    b.Property<int>("RegionDestinationId")
                        .HasColumnType("integer");

                    b.Property<int>("RegionSourceId")
                        .HasColumnType("integer");

                    b.Property<double>("SentFirstCategoryCapacity")
                        .HasColumnType("double precision");

                    b.Property<double>("SentRemainingCapacity")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("RegionDestinationId");

                    b.HasIndex("RegionSourceId");

                    b.ToTable("ConnectedRegions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 2,
                            RegionSourceId = 1,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 2,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 5,
                            RegionSourceId = 1,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 3,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 8,
                            RegionSourceId = 1,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 4,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 1,
                            RegionSourceId = 2,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 5,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 3,
                            RegionSourceId = 2,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 6,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 4,
                            RegionSourceId = 2,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 7,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 5,
                            RegionSourceId = 2,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 8,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 2,
                            RegionSourceId = 3,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 9,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 4,
                            RegionSourceId = 3,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 10,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 2,
                            RegionSourceId = 4,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 11,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 3,
                            RegionSourceId = 4,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 12,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 5,
                            RegionSourceId = 4,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 13,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 10,
                            RegionSourceId = 4,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 14,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 1,
                            RegionSourceId = 5,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 15,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 2,
                            RegionSourceId = 5,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 16,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 4,
                            RegionSourceId = 5,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 17,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 6,
                            RegionSourceId = 5,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 18,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 5,
                            RegionSourceId = 6,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 19,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 7,
                            RegionSourceId = 6,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 20,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 9,
                            RegionSourceId = 6,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 21,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 6,
                            RegionSourceId = 7,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 22,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 1,
                            RegionSourceId = 8,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 23,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 6,
                            RegionSourceId = 9,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        },
                        new
                        {
                            Id = 24,
                            ReceivedFirstCategoryCapacity = 0.0,
                            ReceivedRemainingCapacity = 0.0,
                            RegionDestinationId = 4,
                            RegionSourceId = 10,
                            SentFirstCategoryCapacity = 0.0,
                            SentRemainingCapacity = 0.0
                        });
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("FirstPercentage")
                        .HasColumnType("double precision");

                    b.Property<double>("SecondPercentage")
                        .HasColumnType("double precision");

                    b.Property<double>("ThirdPercentage")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Consumers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstPercentage = 30.0,
                            SecondPercentage = 20.0,
                            ThirdPercentage = 50.0
                        },
                        new
                        {
                            Id = 2,
                            FirstPercentage = 40.0,
                            SecondPercentage = 20.0,
                            ThirdPercentage = 40.0
                        },
                        new
                        {
                            Id = 3,
                            FirstPercentage = 5.0,
                            SecondPercentage = 25.0,
                            ThirdPercentage = 70.0
                        },
                        new
                        {
                            Id = 4,
                            FirstPercentage = 20.0,
                            SecondPercentage = 10.0,
                            ThirdPercentage = 70.0
                        },
                        new
                        {
                            Id = 5,
                            FirstPercentage = 20.0,
                            SecondPercentage = 20.0,
                            ThirdPercentage = 60.0
                        },
                        new
                        {
                            Id = 6,
                            FirstPercentage = 60.0,
                            SecondPercentage = 20.0,
                            ThirdPercentage = 20.0
                        },
                        new
                        {
                            Id = 7,
                            FirstPercentage = 20.0,
                            SecondPercentage = 50.0,
                            ThirdPercentage = 30.0
                        },
                        new
                        {
                            Id = 8,
                            FirstPercentage = 30.0,
                            SecondPercentage = 20.0,
                            ThirdPercentage = 50.0
                        },
                        new
                        {
                            Id = 9,
                            FirstPercentage = 70.0,
                            SecondPercentage = 10.0,
                            ThirdPercentage = 20.0
                        },
                        new
                        {
                            Id = 10,
                            FirstPercentage = 30.0,
                            SecondPercentage = 20.0,
                            ThirdPercentage = 50.0
                        });
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.ConsumerBinding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacityConsumerType")
                        .HasColumnType("integer");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("ConsumerBindings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 4,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 5,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 6,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 7,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 8,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 9,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 10,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 11,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 12,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 13,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 14,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 15,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 8
                        },
                        new
                        {
                            Id = 16,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 8
                        },
                        new
                        {
                            Id = 17,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 9
                        },
                        new
                        {
                            Id = 18,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 9
                        },
                        new
                        {
                            Id = 19,
                            CapacityConsumerType = 0,
                            MacAddress = "",
                            RegionId = 10
                        },
                        new
                        {
                            Id = 20,
                            CapacityConsumerType = 1,
                            MacAddress = "",
                            RegionId = 10
                        });
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.PowerSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("CGPP_Capacity")
                        .HasColumnType("double precision");

                    b.Property<double>("CGPP_LoadFactor")
                        .HasColumnType("double precision");

                    b.Property<double>("CGPP_Percentage")
                        .HasColumnType("double precision");

                    b.Property<double>("HPP_Capacity")
                        .HasColumnType("double precision");

                    b.Property<double>("HPP_LoadFactor")
                        .HasColumnType("double precision");

                    b.Property<double>("HPP_Percentage")
                        .HasColumnType("double precision");

                    b.Property<double>("NPP_Capacity")
                        .HasColumnType("double precision");

                    b.Property<double>("NPP_LoadFactor")
                        .HasColumnType("double precision");

                    b.Property<double>("NPP_Percentage")
                        .HasColumnType("double precision");

                    b.Property<double>("SPP_Capacity")
                        .HasColumnType("double precision");

                    b.Property<double>("SPP_LoadFactor")
                        .HasColumnType("double precision");

                    b.Property<double>("SPP_Percentage")
                        .HasColumnType("double precision");

                    b.Property<double>("WPP_Capacity")
                        .HasColumnType("double precision");

                    b.Property<double>("WPP_LoadFactor")
                        .HasColumnType("double precision");

                    b.Property<double>("WPP_Percentage")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("PowerSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CGPP_Capacity = 16.329999999999998,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 71.0,
                            HPP_Capacity = 0.92000000000000004,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 4.0,
                            NPP_Capacity = 5.75,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 25.0,
                            SPP_Capacity = 0.0,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 0.0,
                            WPP_Capacity = 0.0,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 0.0
                        },
                        new
                        {
                            Id = 2,
                            CGPP_Capacity = 36.579999999999998,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 59.0,
                            HPP_Capacity = 15.5,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 25.0,
                            NPP_Capacity = 9.3000000000000007,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 15.0,
                            SPP_Capacity = 0.434,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 0.69999999999999996,
                            WPP_Capacity = 0.18599999999999997,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 0.29999999999999999
                        },
                        new
                        {
                            Id = 3,
                            CGPP_Capacity = 29.440000000000001,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 92.0,
                            HPP_Capacity = 1.28,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 4.0,
                            NPP_Capacity = 0.95999999999999996,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 3.0,
                            SPP_Capacity = 0.32000000000000001,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 1.0,
                            WPP_Capacity = 0.0,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 0.0
                        },
                        new
                        {
                            Id = 4,
                            CGPP_Capacity = 17.010000000000002,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 63.0,
                            HPP_Capacity = 3.2400000000000002,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 12.0,
                            NPP_Capacity = 6.4800000000000004,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 24.0,
                            SPP_Capacity = 0.0,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 0.0,
                            WPP_Capacity = 0.27000000000000002,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 1.0
                        },
                        new
                        {
                            Id = 5,
                            CGPP_Capacity = 30.0,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 50.0,
                            HPP_Capacity = 9.0,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 15.0,
                            NPP_Capacity = 13.800000000000001,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 23.0,
                            SPP_Capacity = 2.3999999999999999,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 4.0,
                            WPP_Capacity = 4.7999999999999998,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 8.0
                        },
                        new
                        {
                            Id = 6,
                            CGPP_Capacity = 28.050000000000001,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 51.0,
                            HPP_Capacity = 26.399999999999999,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 48.0,
                            NPP_Capacity = 0.0,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 0.0,
                            SPP_Capacity = 0.55000000000000004,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 1.0,
                            WPP_Capacity = 0.0,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 0.0
                        },
                        new
                        {
                            Id = 7,
                            CGPP_Capacity = 29.5,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 59.0,
                            HPP_Capacity = 20.5,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 41.0,
                            NPP_Capacity = 0.0,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 0.0,
                            SPP_Capacity = 0.0,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 0.0,
                            WPP_Capacity = 0.0,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 0.0
                        },
                        new
                        {
                            Id = 8,
                            CGPP_Capacity = 7.5,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 50.0,
                            HPP_Capacity = 7.2000000000000002,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 48.0,
                            NPP_Capacity = 0.29999999999999999,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 2.0,
                            SPP_Capacity = 0.0,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 0.0,
                            WPP_Capacity = 0.0,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 0.0
                        },
                        new
                        {
                            Id = 9,
                            CGPP_Capacity = 7.5,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 50.0,
                            HPP_Capacity = 0.0,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 0.0,
                            NPP_Capacity = 0.0,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 0.0,
                            SPP_Capacity = 7.5,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 50.0,
                            WPP_Capacity = 0.0,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 0.0
                        },
                        new
                        {
                            Id = 10,
                            CGPP_Capacity = 0.0,
                            CGPP_LoadFactor = 100.0,
                            CGPP_Percentage = 0.0,
                            HPP_Capacity = 0.0,
                            HPP_LoadFactor = 100.0,
                            HPP_Percentage = 0.0,
                            NPP_Capacity = 0.0,
                            NPP_LoadFactor = 100.0,
                            NPP_Percentage = 0.0,
                            SPP_Capacity = 0.0,
                            SPP_LoadFactor = 100.0,
                            SPP_Percentage = 0.0,
                            WPP_Capacity = 10.0,
                            WPP_LoadFactor = 100.0,
                            WPP_Percentage = 100.0
                        });
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.ProducerBinding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacityProducerType")
                        .HasColumnType("integer");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RegionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("ProducerBindings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 4,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 5,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 6,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 7,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 8,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 9,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 10,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 11,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 12,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 13,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 14,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 15,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 16,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 17,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 18,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 19,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 20,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 4
                        },
                        new
                        {
                            Id = 21,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 22,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 23,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 24,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 25,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 26,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 27,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 28,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 29,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 30,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 31,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 32,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 33,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 34,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 35,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 36,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 8
                        },
                        new
                        {
                            Id = 37,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 8
                        },
                        new
                        {
                            Id = 38,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 8
                        },
                        new
                        {
                            Id = 39,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 8
                        },
                        new
                        {
                            Id = 40,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 8
                        },
                        new
                        {
                            Id = 41,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 9
                        },
                        new
                        {
                            Id = 42,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 9
                        },
                        new
                        {
                            Id = 43,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 9
                        },
                        new
                        {
                            Id = 44,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 9
                        },
                        new
                        {
                            Id = 45,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 9
                        },
                        new
                        {
                            Id = 46,
                            CapacityProducerType = 0,
                            MacAddress = "",
                            RegionId = 10
                        },
                        new
                        {
                            Id = 47,
                            CapacityProducerType = 2,
                            MacAddress = "",
                            RegionId = 10
                        },
                        new
                        {
                            Id = 48,
                            CapacityProducerType = 1,
                            MacAddress = "",
                            RegionId = 10
                        },
                        new
                        {
                            Id = 49,
                            CapacityProducerType = 3,
                            MacAddress = "",
                            RegionId = 10
                        },
                        new
                        {
                            Id = 50,
                            CapacityProducerType = 4,
                            MacAddress = "",
                            RegionId = 10
                        });
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("ConsumedCapacity")
                        .HasColumnType("double precision");

                    b.Property<int>("ConsumerId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PowerSourceId")
                        .HasColumnType("integer");

                    b.Property<double>("ProducedCapacity")
                        .HasColumnType("double precision");

                    b.Property<int>("TimeZoneOffset")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ConsumerId")
                        .IsUnique();

                    b.HasIndex("PowerSourceId")
                        .IsUnique();

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConsumedCapacity = 100.0,
                            ConsumerId = 1,
                            Name = "ОЭС 1",
                            PowerSourceId = 1,
                            ProducedCapacity = 23.0,
                            TimeZoneOffset = 3
                        },
                        new
                        {
                            Id = 2,
                            ConsumedCapacity = 270.0,
                            ConsumerId = 2,
                            Name = "ОЭС 2",
                            PowerSourceId = 2,
                            ProducedCapacity = 62.0,
                            TimeZoneOffset = 3
                        },
                        new
                        {
                            Id = 3,
                            ConsumedCapacity = 140.0,
                            ConsumerId = 3,
                            Name = "ОЭС 3",
                            PowerSourceId = 3,
                            ProducedCapacity = 32.0,
                            TimeZoneOffset = 3
                        },
                        new
                        {
                            Id = 4,
                            ConsumedCapacity = 120.0,
                            ConsumerId = 4,
                            Name = "ОЭС 4",
                            PowerSourceId = 4,
                            ProducedCapacity = 27.0,
                            TimeZoneOffset = 4
                        },
                        new
                        {
                            Id = 5,
                            ConsumedCapacity = 260.0,
                            ConsumerId = 5,
                            Name = "ОЭС 5",
                            PowerSourceId = 5,
                            ProducedCapacity = 60.0,
                            TimeZoneOffset = 5
                        },
                        new
                        {
                            Id = 6,
                            ConsumedCapacity = 240.0,
                            ConsumerId = 6,
                            Name = "ОЭС 6",
                            PowerSourceId = 6,
                            ProducedCapacity = 55.0,
                            TimeZoneOffset = 7
                        },
                        new
                        {
                            Id = 7,
                            ConsumedCapacity = 11.0,
                            ConsumerId = 7,
                            Name = "ОЭС 7",
                            PowerSourceId = 7,
                            ProducedCapacity = 50.0,
                            TimeZoneOffset = 10
                        },
                        new
                        {
                            Id = 8,
                            ConsumedCapacity = 3.0,
                            ConsumerId = 8,
                            Name = "АЭК-ТИТЭС",
                            PowerSourceId = 8,
                            ProducedCapacity = 15.0,
                            TimeZoneOffset = 3
                        },
                        new
                        {
                            Id = 9,
                            ConsumedCapacity = 3.0,
                            ConsumerId = 9,
                            Name = "АЭК-ПРОМ",
                            PowerSourceId = 9,
                            ProducedCapacity = 15.0,
                            TimeZoneOffset = 7
                        },
                        new
                        {
                            Id = 10,
                            ConsumedCapacity = 0.5,
                            ConsumerId = 10,
                            Name = "АЭК-ВИЭ",
                            PowerSourceId = 10,
                            ProducedCapacity = 10.0,
                            TimeZoneOffset = 4
                        });
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.ConnectedRegion", b =>
                {
                    b.HasOne("InteractiveStand.Domain.Classes.Region", null)
                        .WithMany()
                        .HasForeignKey("RegionDestinationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InteractiveStand.Domain.Classes.Region", null)
                        .WithMany()
                        .HasForeignKey("RegionSourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.ConsumerBinding", b =>
                {
                    b.HasOne("InteractiveStand.Domain.Classes.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.ProducerBinding", b =>
                {
                    b.HasOne("InteractiveStand.Domain.Classes.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("InteractiveStand.Domain.Classes.Region", b =>
                {
                    b.HasOne("InteractiveStand.Domain.Classes.Consumer", "Consumer")
                        .WithOne()
                        .HasForeignKey("InteractiveStand.Domain.Classes.Region", "ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InteractiveStand.Domain.Classes.PowerSource", "PowerSource")
                        .WithOne()
                        .HasForeignKey("InteractiveStand.Domain.Classes.Region", "PowerSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");

                    b.Navigation("PowerSource");
                });
#pragma warning restore 612, 618
        }
    }
}
